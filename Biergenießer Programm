#include <LiquidCrystal.h> 
#include <IRremote.h> 
 
int RECV_PIN = 31; 
IRrecv irrecv(RECV_PIN); 
decode_results results; 
LiquidCrystal lcd(30,36,42,44,45,43); 

//Feuchtigkeitssensor
#include "DHT.h" 
#define DHTPIN 2     // what digital pin we're connected to 
#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321 
 
// Connect pin 1 (on the left) of the sensor to +5V 
// NOTE: If using a board with 3.3V logic like an Arduino Due connect pin 1 
// to 3.3V instead of 5V! 
// Connect pin 2 of the sensor to whatever your DHTPIN is 
// Connect pin 4 (on the right) of the sensor to GROUND 
// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor 
 
 
DHT dht(DHTPIN, DHTTYPE); 

 
void setup()  
{ 
  Serial.begin(9600); 
  lcd.begin(16,2); 
  irrecv.enableIRIn();                                    //Reciever starten 
  dht.begin();                                            //Feuchtigkeitssensor starten
  
 
} 
 
void loop()  
{ 
 while(results.value != 16761405)                         //Schleife, um Eingabe zu beginnen, bzw Aufforderung bis Eingabe getätigt wurde 
  { 
   lcd.setCursor(0,0); 
   lcd.print("Eingabe bitte");                            //Aufforderung zur Eingabe auf dem Display 
    
   if (irrecv.decode(&results))                           //Decodieren des IR-Signals zur Überprüfung 
    { 
      Serial.println(results.value, DEC);                 //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
      irrecv.resume();                                    //Den nächsten Wert emfangen 
    } 
       
   if(results.value == 16738455) 
    {  
       lcd.clear(); 
       lcd.setCursor(0,0);                                //Erste Zeile 
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);                                //Zweite Zeile 
       lcd.print("1.Thore"); 
       delay (2000);                                      //2 Sekunden warten 
       lcd.clear();                                       //Display löschen 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("2.Laura1"); 
       delay (2000);               
       lcd.clear();                 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("3.Laura2"); 
       delay (2000);                
       lcd.clear(); 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("4.Jonathan"); 
       delay (2000);                
       lcd.clear(); 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("5.Lukas"); 
       delay (2000);                
       lcd.clear(); 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("6.Dominik"); 
       delay (2000);                
       lcd.clear(); 
 
       lcd.setCursor(0,0);          
       lcd.print("Menueauswahl: "); 
       lcd.setCursor(0,1);          
       lcd.print("7.Thore2"); 
       delay (2000);                
       lcd.clear(); 
    } 
   
  if(results.value == 16724175)                           //Thores Quelltext, Programm Nr.1 
    {  
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
            lcd.setCursor(0,0); 
            lcd.print("Thores Pro");                      //Programmplatzhalter 
             
              if (irrecv.decode(&results))                //Eingabe zum Beenden am Ende des Programms 
                { 
                  Serial.println(results.value, DEC);     //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                  irrecv.resume();                        //Den nächsten Wert emfangen 
                }   
          } 
    }  
  if(results.value==16718055)                             //Lauras Quelltext, Programm Nr.2 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
            lcd.setCursor(0,0); 
            lcd.print("Prinzessin");                      //Programmplatzhalter 
             
              if (irrecv.decode(&results)) 
                { 
                  Serial.println(results.value, DEC);     //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                  irrecv.resume();                        //Den nächsten Wert emfangen 
                } 
           } 
    } 
 
 
  if (results.value==16743045)                            //Laura2 Quelltext, Programm Nr.3 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
            lcd.setCursor(0,0); 
            lcd.print("Prinzessin2");                        //Programmplatzhalter 
             
               if (irrecv.decode(&results))  
                 { 
                  Serial.println(results.value, DEC);     //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                  irrecv.resume();                        //Den nächsten Wert emfangen 
                 } 
          } 
    } 
 
 
  if(results.value==16716015)                             //Jonathan Quelltext, Programm Nr.4 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
    
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
              lcd.setCursor(0,0); 
              lcd.print("Engel <3");                        //Programmplatzhalter 
             
             
              if (irrecv.decode(&results))  
                { 
                 Serial.println(results.value, DEC);      //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                 irrecv.resume();                         //Den nächsten Wert emfangen 
                } 
          } 
    } 
 
  if(results.value==16726215)                             //Lukas Quelltext, Programm Nr.5 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
          delay(2000);                                    //Messintervall 
          
          float h = dht.readHumidity();                   //Liest die Luftfeuchtigkeit aus und speichert sie in der Variable h ab  
          
             
          if (isnan(h))                                    // Checkt ob irgendwelche Fehler beim auslesen des Sensor gibt  und bricht das Programm früher ab
          { 
            Serial.println("Fehler beim auslesen des Sensors!"); 
            return; 
          } 

          lcd.setCursor(0, 0);                            //Startposition der Darstellung auf dem LCD festlegen. lcd.setCursor(0,0) bedeutet: Erstes Zeichen in der ersten Zeile. 
          lcd.print("Luftfeuchtigkeit:");  
          lcd.setCursor(0, 1);                            // lcd.setCursor(0,1) bedeutet: Erstes Zeichen in der zweiten Zeile. 
          lcd.print(h);
          lcd.print("%"); 
          
          Serial.print("Luftfeuchtigkeit: "); 
          Serial.print(h); 
          Serial.print(" %\t"); 

               
              if (irrecv.decode(&results))  
                { 
                 Serial.println(results.value, DEC);      //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                 irrecv.resume();                         //Den nächsten Wert emfangen  
                } 
          } 
    } 
  if(results.value==16734885)                             //Dominik Quelltext, Programm Nr.6 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
            lcd.setCursor(0,0); 
            lcd.print("Dominique");                       //Programmplatzhalter 
               
              if (irrecv.decode(&results))  
                { 
                 Serial.println(results.value, DEC);      //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                 irrecv.resume();                         //Den nächsten Wert emfangen  
                } 
          } 
    } 
    if(results.value==16728765)                             //Thore2 Quelltext, Programm Nr.7 
    { 
      lcd.clear();                                        //Eingabeaufforderung auf dem Display löschen 
       
        while(results.value != 16761405)                  //Schleife des Programms bis zu manuellen Beendigung mit der "Play"-Taste 
          { 
            lcd.setCursor(0,0); 
            lcd.print("Thore2");                       //Programmplatzhalter 
               
              if (irrecv.decode(&results))  
                { 
                 Serial.println(results.value, DEC);      //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
                 irrecv.resume();                         //Den nächsten Wert emfangen  
                } 
          } 
    } 
  }  
 
    
 lcd.clear();                                             //Letzten Text vom gestarteten Programm auf dem Display löschen 
 lcd.setCursor(0,0); 
 lcd.print("Systemneustart");                             //Mitteilung an den Nutzer, dass gleich ein neues Programm gestartet werden kann 
 lcd.setCursor(0,1); 
 lcd.print("Bitte warten"); 
  
 delay(5000); 
 lcd.clear();                                             //Mitteilung vor Ende des Loops löschen 
  
 while(results.value == 16761405)                         //Schleife, um den Wert von "results" automatisch zu verändern 
  {                                                       //Sodass results.value nicht mehr den Wert der "Play"-Taste zugewiesen hat 
   if (irrecv.decode(&results)) 
    { 
     Serial.println(results.value, DEC);                  //Ausgabe des Wertes als DEC-Zahl auf dem seriellen Monitor 
     irrecv.resume();                                     //Den nächsten Wert emfangen 
    } 
  } 
  
}